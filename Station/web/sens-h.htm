<!DOCTYPE HTML>
<html>
<!-- 
  This is a simple Sensor Historical Data viewer for SmartGarden system.
 
 It is not really a complete, finished work (yet), but rather a working prototype of the page.

 Creative Commons Attribution-ShareAlike 3.0 license
 (c) 2015 Tony-osp (tony-osp.dreamwidth.org)
-->
   <head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
      <title>SmartGarden Sensors Readings</title>
      <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
      <script src="http://code.highcharts.com/highcharts.js"></script>
      <script src="http://code.highcharts.com/modules/exporting.js"></script>
      <script type='text/javascript' src='ko30.js'></script>


      <script type="text/javascript">

    var options = {
        chart: {
            renderTo: 'container',
            type: 'spline'
        },
        title: {
            text: 'SmartGarden Sensors Readings'
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: { 
                month: '%e. %b',
                year: '%y'
            },
            title: {
                text: 'Date'
            }
        },
        yAxis: {
            title: {
                text: 'Reading'
            },
            min: 32
        },

        tooltip: {
            headerFormat: '<b>{series.name}</b><br>',
            pointFormat: '{point.x:%e. %b %y}: {point.y:.2f}'
        },


        series: [{}]
    };


$(function () {


$(document).ready(function() {

;

});

});
      </script>
   </head>
   <body>

<div id="container"></div>

Start date: <input data-bind="value: startDate" /> &nbsp; &nbsp; End date: <input data-bind="value: endDate" />

<select data-bind='options: sensorChoices, value: sensorSelect'> </select>
<select data-bind='options: scaleChoices,  value: scaleSelect'> </select>

<button data-bind="click: refreshChart">Refresh</button>


<script type='text/javascript'>

	var gblSensorsList;

// This is a simple *viewmodel* - JavaScript that defines the data and behavior of your UI

     function sensorViewModel()
     {

        //this.startDate = ko.observable("10/1/2014");
        //this.endDate   = ko.observable("10/31/2014");
		var d = new Date();
		var tmps = (d.getMonth()+1) + "/" + d.getDate() + "/" + d.getFullYear();
		this.endDate = ko.observable(tmps);
		
		var d2 = new Date(d.getTime() - 604800000);	// one week delta expressed in milliseconds
		tmps = (d2.getMonth()+1) + "/" + d2.getDate() + "/" + d2.getFullYear();
        this.startDate   = ko.observable(tmps);
        
        this.sensorChoices = ["Sensor 0", "Sensor 1", "Sensor 2" ];

        for (var i = 0; i < gblSensorsList.length; i++) {     // go through the list of sensors and populate the dropbox

				this.sensorChoices[i]=gblSensorsList[i].sensorName;
		}
		this.sensorSelect  = this.sensorChoices[0];
		
        this.scaleChoices  = ["Hourly", "Daily", "Monthly", "Raw"];
        this.scaleSelect   = ko.observable("Daily");
     };

     this.refreshChart = function() {
    
       var sensIndex = 1;

	   var selSensor=-1;
	   for( var i=0; i<gblSensorsList.length; i++) {  
			if( this.sensorSelect == gblSensorsList[i].sensorName ) {
			
				selSensor=i;
				break;
			}
	   }
	   
       if( selSensor == -1 ) alert("Wrong sensor type " + this.sensorSelect() + ", this should not really happen!");
	   else {
	   
			var sensIndex = gblSensorsList[selSensor].sensorID;
			var sensType = '1';
			if( gblSensorsList[selSensor].sensorType == 'Temperature' ) sensType = '1';
			else if( gblSensorsList[selSensor].sensorType == 'Pressure') sensType = '2';
			else if( gblSensorsList[selSensor].sensorType == 'Humidity') sensType = '3';

			var scaleCode = "d";
			if( this.scaleSelect() == "Hourly" ) scaleCode = 'h';
			else if( this.scaleSelect() == "Daily" ) scaleCode = 'd';
			else if( this.scaleSelect() == "Monthly" ) scaleCode = 'm';
			else if( this.scaleSelect() == "Raw" ) scaleCode = ' ';
			else alert("Wrong scale type " + this.scaleSelect() + ", this should not really happen!");

			var pageName = "json/sens?sdate=" + (new Date(this.startDate()).getTime()/1000) +
							"&edate=" + (new Date(this.endDate()).getTime()/1000) + "&type=" + sensType + "&id=" + sensIndex.toFixed() + "&sum=" + scaleCode;
               
			$('html,body,button').css('cursor', 'wait');
			$.getJSON(
				pageName,  // json endpoint with parameters we just generated
				function(data) 	{
				
				    $('html,body,button').css('cursor', 'auto');
				    options.series[0].data = data.series[0].data;
					options.series[0].name = data.series[0].name;
					var chart = new Highcharts.Chart(options);
				});
		}
    };

// Activates knockout.js
//    ko.applyBindings(sensorViewModel);
	//alert("Requesting sensors list.");

	$.getJSON(
          "json/sensNow", 
		  function(data) 
			{
				gblSensorsList = data.sensors;
				ko.applyBindings(sensorViewModel);
			});


</script>

    <p>&copy; 2014-2015 Tony-osp</p>
   </body>
</html>